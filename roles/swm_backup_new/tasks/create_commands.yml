---
# Create ALPACA Commands

- name: Initialize command creation counter
  ansible.builtin.set_fact:
    commands_created: 0

- name: Create ALPACA commands for each CSV row
  pcg.alpaca_operator.alpaca_command:
    system:
      systemName: "{{ csv_row.system_name }}"
    command:
      name: "{{ command_name }}"
      state: present
      agentName: "{{ csv_row.agent_name }}"
      processId: "{{ sla_config.command_defaults.processId }}"
      parameters: "{{ sla_config.command_defaults.parameters | replace('__SYSTEM_TYPE__', csv_row.system_type) | replace('__HDB_NW_SID__', csv_row.hdb_nw_sid) | replace('__SYSTEM_AZ__', csv_row.system_az) }}"
      parametersNeeded: "{{ sla_config.command_defaults.parametersNeeded }}"
      disabled: "{{ sla_config.command_defaults.disabled }}"
      critical: "{{ sla_config.command_defaults.critical }}"
      autoDeploy: "{{ sla_config.command_defaults.autoDeploy }}"
      schedule:
        period: "{{ sla_config.command_defaults.schedule.period }}"
        time: "{{ sla_config.command_defaults.schedule.time }}"
        cronExpression: "{{ sla_config.command_defaults.schedule.cronExpression }}"
        daysOfWeek: "{{ sla_config.command_defaults.schedule.daysOfWeek }}"
      history:
        documentAllRuns: "{{ sla_config.command_defaults.history.documentAllRuns }}"
        retention: "{{ sla_config.command_defaults.history.retention }}"
      timeout:
        type: "{{ sla_config.command_defaults.timeout.type }}"
        value: "{{ sla_config.command_defaults.timeout.value }}"
      escalation:
        mailEnabled: "{{ sla_config.command_defaults.escalation.mailEnabled }}"
        smsEnabled: "{{ sla_config.command_defaults.escalation.smsEnabled }}"
        mailAddress: "{{ sla_config.command_defaults.escalation.mailAddress }}"
        smsAddress: "{{ sla_config.command_defaults.escalation.smsAddress }}"
        minFailureCount: "{{ sla_config.command_defaults.escalation.minFailureCount }}"
        triggers:
          everyChange: "{{ sla_config.command_defaults.escalation.triggers.everyChange }}"
          toRed: "{{ sla_config.command_defaults.escalation.triggers.toRed }}"
          toYellow: "{{ sla_config.command_defaults.escalation.triggers.toYellow }}"
          toGreen: "{{ sla_config.command_defaults.escalation.triggers.toGreen }}"
    apiConnection:
      host: "{{ alpaca_api.host }}"
      protocol: "{{ alpaca_api.protocol }}"
      port: "{{ alpaca_api.port }}"
      username: "{{ alpaca_api.username }}"
      password: "{{ alpaca_api.password }}"
      tls_verify: "{{ alpaca_api.tls_verify }}"
  vars:
    sla_config: "{{ sla_definitions[csv_row.system_sla] }}"
    command_name: "{{ sla_config.name }} Backup Command - {{ csv_row.system_name }}"
  loop: "{{ csv_data }}"
  loop_control:
    loop_var: csv_row
    label: "{{ csv_row.system_name }} ({{ csv_row.system_sla }})"
  register: command_creation_results

- name: Count successfully created commands
  ansible.builtin.set_fact:
    commands_created: "{{ commands_created | int + (1 if item.changed else 0) }}"
  loop: "{{ command_creation_results.results }}"
  loop_control:
    label: "{{ item.csv_row.system_name if item.csv_row is defined else 'Unknown' }}"

- name: Display command creation summary
  ansible.builtin.debug:
    msg: |
      Command Creation Summary:
      - Total systems processed: {{ csv_data | length }}
      - Commands created/updated: {{ commands_created }}
      - Commands already existing: {{ csv_data | length | int - commands_created | int }}
      
      SLA Breakdown:
      - SLA1 ({{ sla_definitions.SLA1.name }}): {{ csv_data | selectattr('system_sla', 'equalto', 'SLA1') | list | length }} systems
      - SLA2 ({{ sla_definitions.SLA2.name }}): {{ csv_data | selectattr('system_sla', 'equalto', 'SLA2') | list | length }} systems
      - SLA3 ({{ sla_definitions.SLA3.name }}): {{ csv_data | selectattr('system_sla', 'equalto', 'SLA3') | list | length }} systems
      - SLA4 ({{ sla_definitions.SLA4.name }}): {{ csv_data | selectattr('system_sla', 'equalto', 'SLA4') | list | length }} systems

- name: Display failed command creations
  ansible.builtin.debug:
    msg: |
      Failed to create command for system: {{ item.csv_row.system_name }}
      Error: {{ item.msg | default('Unknown error') }}
  loop: "{{ command_creation_results.results }}"
  loop_control:
    label: "{{ item.csv_row.system_name if item.csv_row is defined else 'Unknown' }}"
  when: item.failed | default(false)

- name: Fail if any command creation failed
  ansible.builtin.fail:
    msg: "One or more command creations failed. Check the debug output above for details."
  when: command_creation_results.results | selectattr('failed', 'defined') | selectattr('failed', 'equalto', true) | list | length > 0 
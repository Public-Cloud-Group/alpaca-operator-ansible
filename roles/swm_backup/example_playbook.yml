---
# Example Playbook for CSV Processor Role
# This playbook demonstrates how to use the csv_processor role

- name: Process CSV and generate ALPACA Commands
  hosts: local
  gather_facts: false

  vars:
    # Override default CSV file
    csv_processor:
      input_file: "swm_prod.csv"
      output_dir: "{{ playbook_dir }}/output"
      delimiter: ","
      encoding: "utf-8"
      skip_header: true

    # Set processing environment
    processing_options:
      create_commands: false  # Generate playbooks instead of creating commands directly
      validate_data: true
      environment: "prod"
      log_level: "info"

    # ALPACA API Configuration (will be overridden by inventory)
    alpaca_api:
      host: "{{ inventory_hostname }}"
      protocol: "{{ ALPACA_Operator_API_Protocol | default('https') }}"
      port: "{{ ALPACA_Operator_API_Port | default(443) }}"
      username: "{{ ALPACA_Operator_API_Username }}"
      password: "{{ ALPACA_Operator_API_Password }}"
      tls_verify: "{{ ALPACA_Operator_API_Validate_Certs | default(true) }}"

  tasks:
    - name: Include CSV processor role
      include_role:
        name: csv_processor

    - name: Display processing results
      debug:
        msg: |
          CSV Processing completed successfully!

          Generated files in: {{ csv_processor.output_dir }}

          To apply the generated commands:
          1. Review the generated playbooks
          2. Run: ansible-playbook -i {{ csv_processor.output_dir }}/inventory.ini {{ csv_processor.output_dir }}/consolidated_commands.yml

          Or run SLA-specific playbooks:
          - ansible-playbook -i {{ csv_processor.output_dir }}/inventory.ini {{ csv_processor.output_dir }}/sla_1_commands.yml
          - ansible-playbook -i {{ csv_processor.output_dir }}/inventory.ini {{ csv_processor.output_dir }}/sla_2_commands.yml
          - ansible-playbook -i {{ csv_processor.output_dir }}/inventory.ini {{ csv_processor.output_dir }}/sla_3_commands.yml
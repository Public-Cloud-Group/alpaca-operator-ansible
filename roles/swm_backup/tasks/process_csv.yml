---
# CSV Processor Role - CSV Processing Tasks

- name: Process CSV data and apply SLA definitions
  set_fact:
    processed_commands: "{{ processed_commands | default([]) + [processed_command] }}"
  vars:
    row: "{{ item }}"
    sla_level: "{{ row[5] }}"  # system_sla column
    sla_config: "{{ sla_definitions[sla_level] }}"
    
    # Build processed command based on CSV structure
    processed_command:
      system:
        systemName: "{{ row[0] }}"  # primary_system
      command:
        name: "{{ 'Backup_' + row[0] + '_' + row[3] }}"  # primary_system + system_type
        state: "present"
        agentName: "{{ row[8] }}"  # system_vdns
        parameters: "-p {{ row[3] }} -s {{ row[0] }} -l {{ row[5] }} -d {{ row[4] }} -r {{ row[9] }} -b {{ row[10] }} -t {{ row[11] }} -h {{ row[1] }}"
        parametersNeeded: false
        disabled: false
        critical: true
        autoDeploy: false
        schedule:
          period: "{{ sla_config.schedule_defaults.period }}"
          time: "{{ sla_config.schedule_defaults.time }}"
          cronExpression: ""
          daysOfWeek: "{{ sla_config.schedule_defaults.days_of_week }}"
        history:
          documentAllRuns: false
          retention: "{{ sla_config.retention.local_log_ret * 86400 }}"
        timeout:
          type: "{{ sla_config.timeout.type }}"
          value: "{{ sla_config.timeout.value }}"
        escalation:
          mailEnabled: "{{ sla_config.escalation.mail_enabled }}"
          smsEnabled: "{{ sla_config.escalation.sms_enabled }}"
          mailAddress: "{{ sla_config.escalation.mail_address }}"
          smsAddress: "{{ sla_config.escalation.sms_address | default('') }}"
          minFailureCount: "{{ sla_config.escalation.min_failure_count }}"
          triggers:
            everyChange: "{{ sla_config.escalation.triggers.every_change }}"
            toRed: "{{ sla_config.escalation.triggers.to_red }}"
            toYellow: "{{ sla_config.escalation.triggers.to_yellow }}"
            toGreen: "{{ sla_config.escalation.triggers.to_green }}"
        sla_info:
          level: "{{ sla_level }}"
          name: "{{ sla_config.name }}"
          description: "{{ sla_config.description }}"
      apiConnection: "{{ alpaca_api }}"
  loop: "{{ validated_csv_data }}"

- name: Create processing summary
  set_fact:
    processing_summary:
      total_commands: "{{ processed_commands | length }}"
      sla_distribution:
        sla_1: "{{ processed_commands | selectattr('command.sla_info.level', 'equalto', 'SLA1') | list | length }}"
        sla_2: "{{ processed_commands | selectattr('command.sla_info.level', 'equalto', 'SLA2') | list | length }}"
        sla_3: "{{ processed_commands | selectattr('command.sla_info.level', 'equalto', 'SLA3') | list | length }}"
        sla_4: "{{ processed_commands | selectattr('command.sla_info.level', 'equalto', 'SLA4') | list | length }}"
      systems: "{{ processed_commands | map(attribute='system.systemName') | unique | list }}"
      agents: "{{ processed_commands | map(attribute='command.agentName') | unique | list }}"

- name: Display processing summary
  debug:
    msg: |
      CSV Processing Summary:
      - Total Commands: {{ processing_summary.total_commands }}
      - SLA Distribution:
        * SLA 1: {{ processing_summary.sla_distribution.sla_1 }}
        * SLA 2: {{ processing_summary.sla_distribution.sla_2 }}
        * SLA 3: {{ processing_summary.sla_distribution.sla_3 }}
        * SLA 4: {{ processing_summary.sla_distribution.sla_4 }}
      - Systems: {{ processing_summary.systems | length }}
      - Agents: {{ processing_summary.agents | length }}
      - Processing Mode: {{ 'Direct creation' if processing_options.create_commands else 'Playbook generation' }} 
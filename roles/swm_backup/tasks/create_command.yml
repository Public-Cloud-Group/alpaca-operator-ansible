---
# Create a single ALPACA command based on template

- name: Display command creation information
  ansible.builtin.debug:
    msg: |
      Creating command: {{ command_template.name }}
      - System: {{ command_template.system.systemName }}
      - Agent: {{ command_template.command.agentName }}
      - Process ID: {{ command_template.command.processId }}
      - Parameters: {{ command_template.command.parameters }}
  when: processing_options.verbose_output | default(true)

- name: Create ALPACA command
  pcg.alpaca_operator.alpaca_command:
    system:
      systemName: "{{ command_template.system.systemName }}"
    command:
      name: "{{ command_template.command.name }}"
      state: "{{ command_template.command.state }}"
      agentName: "{{ command_template.command.agentName }}"
      processId: "{{ command_template.command.processId }}"
      parameters: "{{ command_template.command.parameters }}"
      parametersNeeded: "{{ command_template.command.parametersNeeded }}"
      disabled: "{{ command_template.command.disabled }}"
      critical: "{{ command_template.command.critical }}"
      autoDeploy: "{{ command_template.command.autoDeploy }}"
      schedule:
        period: "{{ command_template.command.schedule.period }}"
        time: "{{ command_template.command.schedule.time }}"
        cronExpression: "{{ command_template.command.schedule.cronExpression }}"
        daysOfWeek: "{{ command_template.command.schedule.daysOfWeek }}"
      history:
        documentAllRuns: "{{ command_template.command.history.documentAllRuns }}"
        retention: "{{ command_template.command.history.retention }}"
      timeout:
        type: "{{ command_template.command.timeout.type }}"
        value: "{{ command_template.command.timeout.value }}"
      escalation:
        mailEnabled: "{{ command_template.command.escalation.mailEnabled }}"
        smsEnabled: "{{ command_template.command.escalation.smsEnabled }}"
        mailAddress: "{{ command_template.command.escalation.mailAddress }}"
        smsAddress: "{{ command_template.command.escalation.smsAddress }}"
        minFailureCount: "{{ command_template.command.escalation.minFailureCount }}"
        triggers:
          everyChange: "{{ command_template.command.escalation.triggers.everyChange }}"
          toRed: "{{ command_template.command.escalation.triggers.toRed }}"
          toYellow: "{{ command_template.command.escalation.triggers.toYellow }}"
          toGreen: "{{ command_template.command.escalation.triggers.toGreen }}"
    apiConnection:
      host: "{{ alpaca_api.host }}"
      protocol: "{{ alpaca_api.protocol }}"
      port: "{{ alpaca_api.port }}"
      username: "{{ alpaca_api.username }}"
      password: "{{ alpaca_api.password }}"
      tls_verify: "{{ alpaca_api.tls_verify }}"
  register: command_result

- name: Update success counter
  ansible.builtin.set_fact:
    commands_created: "{{ commands_created | int + (1 if command_result.changed else 0) }}"
  when: command_result.changed | default(false)

- name: Update failure counter
  ansible.builtin.set_fact:
    commands_failed: "{{ commands_failed | int + (1 if command_result.failed else 0) }}"
  when: command_result.failed | default(false)

- name: Display command creation result
  ansible.builtin.debug:
    msg: |
      Command creation result for {{ command_template.name }}:
      - Status: {{ 'SUCCESS' if command_result.changed else 'FAILED' if command_result.failed else 'NO CHANGE' }}
      - Changed: {{ command_result.changed | default(false) }}
      - Failed: {{ command_result.failed | default(false) }}
      {% if command_result.msg is defined %}
      - Message: {{ command_result.msg }}
      {% endif %}
  when: processing_options.verbose_output | default(true)

- name: Fail if command creation failed and continue_on_error is false
  ansible.builtin.fail:
    msg: |
      Failed to create command {{ command_template.name }} for system {{ command_template.system.systemName }}:
      {{ command_result.msg | default('Unknown error') }}
  when: command_result.failed | default(false) and not processing_options.continue_on_error | default(false) 
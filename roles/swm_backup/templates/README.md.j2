# ALPACA Operator CSV Processor

## Overview

This Ansible role processes CSV files and generates ALPACA Operator commands based on defined SLA levels (SLA1-4) and variable mappings.

## Generated Files

### Playbooks
- **Individual Command Playbooks**: A separate playbook for each command
- **Consolidated Playbook**: One playbook with all commands (`consolidated_commands.yml`)
- **SLA-specific Playbooks**: Separate playbooks for each SLA level
  - `sla_1_commands.yml` - Basic SLA
  - `sla_2_commands.yml` - Enhanced SLA
  - `sla_3_commands.yml` - Premium SLA
- **System-specific Playbooks**: Separate playbooks for each system

### Configuration Files
- `inventory.ini` - Ansible Inventory Template
- `variables.yml` - All variables and configurations
- `README.md` - This documentation

## CSV Format

The CSV file must contain the following columns:

| Column | Description | Example |
|--------|-------------|---------|
| SystemName | Name of the system | "Production Server" |
| AgentName | Name of the agent | "backup_agent_01" |
| CommandName | Name of the command | "BKP: DB log sync" |
| SLA | SLA level (1, 2, or 3) | "2" |
| Parameters | Command parameters | "-p GLTarch -s <BKP_LOG_SRC>" |
| Schedule | Schedule template | "hourly" |
| Enabled | Enabled (true/false) | "true" |
| Critical | Critical (true/false) | "false" |

### Example CSV
```csv
SystemName,AgentName,CommandName,SLA,Parameters,Schedule,Enabled,Critical
"Production Server","backup_agent_01","BKP: DB log sync","2","-p GLTarch -s <BKP_LOG_SRC> -l 4 -d <BKP_LOG_DEST1>","hourly","true","false"
"Test Server","test_agent_01","BKP: Test backup","1","-p test -s <BKP_LOG_SRC>","daily","true","false"
```

## SLA Definitions

### SLA 1 - Basic SLA
- **Description**: Standard SLA for basic requirements
- **Retention**: 7 days local files, 30 days blob logs
- **Timeout**: 300 seconds (standard)
- **Escalation**: Email on errors, 2 failures until escalation
- **Schedule**: Hourly, Monday-Friday

### SLA 2 - Enhanced SLA
- **Description**: Enhanced SLA for critical systems
- **Retention**: 14 days local files, 90 days blob logs
- **Timeout**: 600 seconds (custom)
- **Escalation**: Email + SMS, 1 failure until escalation
- **Schedule**: Every 5 minutes, 7 days/week

### SLA 3 - Premium SLA
- **Description**: Premium SLA for highly critical systems
- **Retention**: 30 days local files, 365 days blob logs
- **Timeout**: 1800 seconds (custom)
- **Escalation**: Email + SMS, 1 failure until escalation
- **Schedule**: Every minute, 7 days/week

## Variable Mappings

The role supports variable mappings for command parameters:

### Available Variables
- `<BKP_LOG_SRC>` - Backup Log Source
- `<BKP_LOG_DEST1>` - Primary Backup Destination
- `<BKP_LOG_DEST2>` - Secondary Backup Destination
- `<BKP_LOG_CLEANUP_INT>` - Cleanup Interval 1
- `<BKP_LOG_CLEANUP_INT2>` - Cleanup Interval 2
- `<DB_HOST>` - Database Host

### SLA-dependent Values
Variable values are determined by the SLA level assigned to each command.

## Schedule Templates

### Available Templates
- `manual` - Manual execution
- `hourly` - Hourly
- `daily` - Daily at 02:00
- `business_hours` - Hourly, Monday-Friday
- `weekend` - Daily at 06:00, weekends
- `every_5min` - Every 5 minutes
- `every_minute` - Every minute

## Usage

### 1. Prepare CSV File
Create a CSV file with the required columns.

### 2. Execute Role
```bash
ansible-playbook -i inventory.ini playbook.yml
```

### 3. Use Generated Playbooks
```bash
# All commands at once
ansible-playbook -i inventory.ini consolidated_commands.yml

# Only SLA 2 commands
ansible-playbook -i inventory.ini sla_2_commands.yml

# Only specific system
ansible-playbook -i inventory.ini system_Production_Server_commands.yml
```

## Configuration

### Main Configuration
```yaml
csv_processor:
  input_file: "swm_prod.csv"
  output_dir: "{{ playbook_dir }}/output"
  delimiter: ","
  encoding: "utf-8"
  skip_header: true

processing_options:
  create_commands: false  # false = generate playbooks, true = create commands directly
  validate_data: true
  log_level: "info"
```

### ALPACA API Configuration
```yaml
alpaca_api:
  host: "{{ inventory_hostname }}"
  protocol: "https"
  port: 443
  username: "{{ ALPACA_Operator_API_Username }}"
  password: "{{ ALPACA_Operator_API_Password }}"
  tls_verify: true
```

## Processing Statistics

- **Total Commands**: {{ processing_summary.total_commands }}
- **SLA Distribution**:
  - SLA 1: {{ processing_summary.sla_distribution.sla_1 }}
  - SLA 2: {{ processing_summary.sla_distribution.sla_2 }}
  - SLA 3: {{ processing_summary.sla_distribution.sla_3 }}
- **Systems**: {{ processing_summary.systems | length }}
- **Agents**: {{ processing_summary.agents | length }}
- **Processing Mode**: {{ 'Direct creation' if processing_options.create_commands else 'Playbook generation' }}

## Generated on: {{ ansible_date_time.iso8601 | default(lookup('pipe', 'date -u +%Y-%m-%dT%H:%M:%SZ')) }}
# ALPACA Operator CSV Processor

## Übersicht

Diese Ansible Role verarbeitet CSV-Dateien und generiert ALPACA Operator Commands basierend auf definierten SLA-Levels (SLA1-4) und Variable-Mappings.

## Generierte Dateien

### Playbooks
- **Individual Command Playbooks**: Ein separates Playbook für jeden Command
- **Consolidated Playbook**: Ein Playbook mit allen Commands (`consolidated_commands.yml`)
- **SLA-specific Playbooks**: Separate Playbooks für jeden SLA-Level
  - `sla_1_commands.yml` - Basic SLA
  - `sla_2_commands.yml` - Enhanced SLA
  - `sla_3_commands.yml` - Premium SLA
- **System-specific Playbooks**: Separate Playbooks für jedes System

### Konfigurationsdateien
- `inventory.ini` - Ansible Inventory Template
- `variables.yml` - Alle Variablen und Konfigurationen
- `README.md` - Diese Dokumentation

## CSV Format

Die CSV-Datei muss folgende Spalten enthalten:

| Spalte | Beschreibung | Beispiel |
|--------|--------------|----------|
| SystemName | Name des Systems | "Production Server" |
| AgentName | Name des Agents | "backup_agent_01" |
| CommandName | Name des Commands | "BKP: DB log sync" |
| SLA | SLA-Level (1, 2, oder 3) | "2" |
| Parameters | Command-Parameter | "-p GLTarch -s <BKP_LOG_SRC>" |
| Schedule | Schedule-Template | "hourly" |
| Enabled | Aktiviert (true/false) | "true" |
| Critical | Kritisch (true/false) | "false" |

### Beispiel CSV
```csv
SystemName,AgentName,CommandName,SLA,Parameters,Schedule,Enabled,Critical
"Production Server","backup_agent_01","BKP: DB log sync","2","-p GLTarch -s <BKP_LOG_SRC> -l 4 -d <BKP_LOG_DEST1>","hourly","true","false"
"Test Server","test_agent_01","BKP: Test backup","1","-p test -s <BKP_LOG_SRC>","daily","true","false"
```

## SLA Definitionen

### SLA 1 - Basic SLA
- **Beschreibung**: Standard SLA für grundlegende Anforderungen
- **Retention**: 7 Tage lokale Dateien, 30 Tage Blob-Logs
- **Timeout**: 300 Sekunden (Standard)
- **Escalation**: Email bei Fehlern, 2 Fehler bis Escalation
- **Schedule**: Stündlich, Montag-Freitag

### SLA 2 - Enhanced SLA
- **Beschreibung**: Erweiterte SLA für kritische Systeme
- **Retention**: 14 Tage lokale Dateien, 90 Tage Blob-Logs
- **Timeout**: 600 Sekunden (Custom)
- **Escalation**: Email + SMS, 1 Fehler bis Escalation
- **Schedule**: Alle 5 Minuten, 7 Tage/Woche

### SLA 3 - Premium SLA
- **Beschreibung**: Premium SLA für hochkritische Systeme
- **Retention**: 30 Tage lokale Dateien, 365 Tage Blob-Logs
- **Timeout**: 1800 Sekunden (Custom)
- **Escalation**: Email + SMS, 1 Fehler bis Escalation
- **Schedule**: Jede Minute, 7 Tage/Woche

## Variable Mappings

Die Role unterstützt Variable-Mappings für Command-Parameter:

### Verfügbare Variablen
- `<BKP_LOG_SRC>` - Backup Log Source
- `<BKP_LOG_DEST1>` - Primary Backup Destination
- `<BKP_LOG_DEST2>` - Secondary Backup Destination
- `<BKP_LOG_CLEANUP_INT>` - Cleanup Interval 1
- `<BKP_LOG_CLEANUP_INT2>` - Cleanup Interval 2
- `<DB_HOST>` - Database Host

### Environment-spezifische Werte
Jede Variable kann environment-spezifische Werte haben:
- `prod` - Produktionsumgebung
- `test` - Testumgebung
- `dev` - Entwicklungsumgebung

## Schedule Templates

### Verfügbare Templates
- `manual` - Manuelle Ausführung
- `hourly` - Stündlich
- `daily` - Täglich um 02:00
- `business_hours` - Stündlich, Montag-Freitag
- `weekend` - Täglich um 06:00, Wochenende
- `every_5min` - Alle 5 Minuten
- `every_minute` - Jede Minute

## Verwendung

### 1. CSV-Datei vorbereiten
Erstellen Sie eine CSV-Datei mit den erforderlichen Spalten.

### 2. Role ausführen
```bash
ansible-playbook -i inventory.ini playbook.yml
```

### 3. Generierte Playbooks verwenden
```bash
# Alle Commands auf einmal
ansible-playbook -i inventory.ini consolidated_commands.yml

# Nur SLA 2 Commands
ansible-playbook -i inventory.ini sla_2_commands.yml

# Nur bestimmtes System
ansible-playbook -i inventory.ini system_Production_Server_commands.yml
```

## Konfiguration

### Hauptkonfiguration
```yaml
csv_processor:
  input_file: "swm_prod.csv"
  output_dir: "{{ playbook_dir }}/output"
  delimiter: ","
  encoding: "utf-8"
  skip_header: true

processing_options:
  create_commands: false  # false = Playbooks generieren, true = Commands direkt erstellen
  validate_data: true
  environment: "prod"
  log_level: "info"
```

### ALPACA API Konfiguration
```yaml
alpaca_api:
  host: "{{ inventory_hostname }}"
  protocol: "https"
  port: 443
  username: "{{ ALPACA_Operator_API_Username }}"
  password: "{{ ALPACA_Operator_API_Password }}"
  tls_verify: true
```

## Verarbeitungsstatistik

- **Total Commands**: {{ processing_summary.total_commands }}
- **SLA Distribution**:
  - SLA 1: {{ processing_summary.sla_distribution.sla_1 }}
  - SLA 2: {{ processing_summary.sla_distribution.sla_2 }}
  - SLA 3: {{ processing_summary.sla_distribution.sla_3 }}
- **Systems**: {{ processing_summary.systems | length }}
- **Agents**: {{ processing_summary.agents | length }}
- **Environment**: {{ processing_options.environment }}

## Generiert am: {{ ansible_date_time.iso8601 }}
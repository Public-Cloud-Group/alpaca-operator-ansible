---
# Example Playbook for SWM Backup Role - New Architecture
# This playbook demonstrates the completely redesigned role

- name: SWM Backup with New Architecture
  hosts: localhost
  gather_facts: false
  
  vars:
    # ALPACA API Configuration
    ALPACA_Operator_API_Protocol: "https"
    ALPACA_Operator_API_Port: 8443
    ALPACA_Operator_API_Username: "your_username"
    ALPACA_Operator_API_Password: "your_password"
    ALPACA_Operator_API_Validate_Certs: false
    
    # Custom SLA Command Templates (optional - can override defaults)
    sla_command_templates:
      "SLA1":
        - name: "Production Full Backup"
          system:
            systemName: "{{ csv_row.hdb_nw_sid }}"
          command:
            name: "Production Full Backup - {{ csv_row.hdb_nw_sid }}"
            state: present
            agentName: "{{ csv_row.system_vdns }}"
            processId: 801
            parameters: "-p prod -t {{ csv_row.system_type }} -s {{ csv_row.hdb_nw_sid }} -az {{ csv_row.system_az }} -backup full"
            parametersNeeded: false
            disabled: false
            critical: true
            autoDeploy: true
            schedule:
              period: "hourly"
              time: "00:00:00"
              cronExpression: ""
              daysOfWeek: ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]
            history:
              documentAllRuns: true
              retention: 604800
            timeout:
              type: "default"
              value: 300
            escalation:
              mailEnabled: true
              smsEnabled: false
              mailAddress: "prod-monitoring@pcg.io"
              smsAddress: ""
              minFailureCount: 2
              triggers:
                everyChange: false
                toRed: true
                toYellow: false
                toGreen: false

        - name: "Production Log Backup"
          system:
            systemName: "{{ csv_row.hdb_nw_sid }}"
          command:
            name: "Production Log Backup - {{ csv_row.hdb_nw_sid }}"
            state: present
            agentName: "{{ csv_row.system_vdns }}"
            processId: 802
            parameters: "-p prod -t {{ csv_row.system_type }} -s {{ csv_row.hdb_nw_sid }} -az {{ csv_row.system_az }} -backup log"
            parametersNeeded: false
            disabled: false
            critical: true
            autoDeploy: true
            schedule:
              period: "every_5min"
              time: "00:00:00"
              cronExpression: ""
              daysOfWeek: ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]
            history:
              documentAllRuns: true
              retention: 604800
            timeout:
              type: "default"
              value: 300
            escalation:
              mailEnabled: true
              smsEnabled: false
              mailAddress: "prod-monitoring@pcg.io"
              smsAddress: ""
              minFailureCount: 2
              triggers:
                everyChange: false
                toRed: true
                toYellow: false
                toGreen: false

        - name: "Production Health Check"
          system:
            systemName: "{{ csv_row.hdb_nw_sid }}"
          command:
            name: "Production Health Check - {{ csv_row.hdb_nw_sid }}"
            state: present
            agentName: "{{ csv_row.system_vdns }}"
            processId: 803
            parameters: "-p prod -t {{ csv_row.system_type }} -s {{ csv_row.hdb_nw_sid }} -az {{ csv_row.system_az }} -health"
            parametersNeeded: false
            disabled: false
            critical: true
            autoDeploy: true
            schedule:
              period: "every_5min"
              time: "00:00:00"
              cronExpression: ""
              daysOfWeek: ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]
            history:
              documentAllRuns: true
              retention: 604800
            timeout:
              type: "default"
              value: 300
            escalation:
              mailEnabled: true
              smsEnabled: false
              mailAddress: "prod-monitoring@pcg.io"
              smsAddress: ""
              minFailureCount: 2
              triggers:
                everyChange: false
                toRed: true
                toYellow: false
                toGreen: false

        - name: "Production Performance Monitor"
          system:
            systemName: "{{ csv_row.hdb_nw_sid }}"
          command:
            name: "Production Performance Monitor - {{ csv_row.hdb_nw_sid }}"
            state: present
            agentName: "{{ csv_row.system_vdns }}"
            processId: 804
            parameters: "-p prod -t {{ csv_row.system_type }} -s {{ csv_row.hdb_nw_sid }} -az {{ csv_row.system_az }} -perf"
            parametersNeeded: false
            disabled: false
            critical: false
            autoDeploy: true
            schedule:
              period: "every_5min"
              time: "00:00:00"
              cronExpression: ""
              daysOfWeek: ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]
            history:
              documentAllRuns: true
              retention: 604800
            timeout:
              type: "default"
              value: 300
            escalation:
              mailEnabled: true
              smsEnabled: false
              mailAddress: "prod-monitoring@pcg.io"
              smsAddress: ""
              minFailureCount: 2
              triggers:
                everyChange: false
                toRed: true
                toYellow: false
                toGreen: false

      "SLA2":
        - name: "Staging Backup"
          system:
            systemName: "{{ csv_row.hdb_nw_sid }}"
          command:
            name: "Staging Backup - {{ csv_row.hdb_nw_sid }}"
            state: present
            agentName: "{{ csv_row.system_vdns }}"
            processId: 802
            parameters: "-p staging -t {{ csv_row.system_type }} -s {{ csv_row.hdb_nw_sid }} -az {{ csv_row.system_az }} -backup full"
            parametersNeeded: false
            disabled: false
            critical: true
            autoDeploy: true
            schedule:
              period: "every_5min"
              time: "00:00:00"
              cronExpression: ""
              daysOfWeek: ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]
            history:
              documentAllRuns: true
              retention: 1209600
            timeout:
              type: "custom"
              value: 600
            escalation:
              mailEnabled: true
              smsEnabled: true
              mailAddress: "staging-monitoring@pcg.io"
              smsAddress: "0123456789"
              minFailureCount: 1
              triggers:
                everyChange: true
                toRed: true
                toYellow: true
                toGreen: false

        - name: "Staging Health Check"
          system:
            systemName: "{{ csv_row.hdb_nw_sid }}"
          command:
            name: "Staging Health Check - {{ csv_row.hdb_nw_sid }}"
            state: present
            agentName: "{{ csv_row.system_vdns }}"
            processId: 803
            parameters: "-p staging -t {{ csv_row.system_type }} -s {{ csv_row.hdb_nw_sid }} -az {{ csv_row.system_az }} -health"
            parametersNeeded: false
            disabled: false
            critical: true
            autoDeploy: true
            schedule:
              period: "every_5min"
              time: "00:00:00"
              cronExpression: ""
              daysOfWeek: ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]
            history:
              documentAllRuns: true
              retention: 1209600
            timeout:
              type: "custom"
              value: 600
            escalation:
              mailEnabled: true
              smsEnabled: true
              mailAddress: "staging-monitoring@pcg.io"
              smsAddress: "0123456789"
              minFailureCount: 1
              triggers:
                everyChange: true
                toRed: true
                toYellow: true
                toGreen: false

  tasks:
    - name: Include SWM Backup role with new architecture
      include_role:
        name: swm_backup
      vars:
        # Override CSV file path if needed
        csv_processor:
          input_file: "{{ role_path }}/files/swm_prod.csv"
          delimiter: ";"
          encoding: "utf-8"
          skip_header: true
        
        # Processing options
        processing_options:
          validate_data: true
          log_level: "info"
          continue_on_error: false
          verbose_output: true

    - name: Display final summary
      ansible.builtin.debug:
        msg: |
          SWM Backup with New Architecture completed successfully!
          
          Summary:
          - Systems processed: {{ csv_data | length if csv_data is defined else 'Unknown' }}
          - Commands created: {{ commands_created | default(0) }}
          - Commands failed: {{ commands_failed | default(0) }}
          - SLA1 systems: {{ csv_data | selectattr('system_sla', 'equalto', 'SLA1') | list | length if csv_data is defined else 0 }}
          - SLA2 systems: {{ csv_data | selectattr('system_sla', 'equalto', 'SLA2') | list | length if csv_data is defined else 0 }}
          - SLA3 systems: {{ csv_data | selectattr('system_sla', 'equalto', 'SLA3') | list | length if csv_data is defined else 0 }}
          - SLA4 systems: {{ csv_data | selectattr('system_sla', 'equalto', 'SLA4') | list | length if csv_data is defined else 0 }}
          
          Each SLA1 system now has 4 commands:
          - Production Full Backup
          - Production Log Backup  
          - Production Health Check
          - Production Performance Monitor
          
          Each SLA2 system now has 2 commands:
          - Staging Backup
          - Staging Health Check 
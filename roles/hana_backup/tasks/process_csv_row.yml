---
- name: Set variables for current CSV row
  set_fact:
    _system_variables: "{{ system_variables }}" # Copy system_variables to _system_variables because we cannot directly overwrite playbook-defined variables in Ansible
    csv:
      primarySystem: "{{ csv_row.primary_system | default(omit) }}"
      systemName: "{{ csv_row.hdb_nw_sid | default(omit) }}"
      hdbTenant: "{{ csv_row.hdb_tenant | default(omit) }}"
      agentName: "{{ csv_row.system_vdns | default(omit) }}"
      systemSla: "{{ csv_row.system_sla | default(omit) }}"
      systemType: "{{ csv_row.system_type | default(omit) }}"
      systemStaging: "{{ csv_row.system_staging | default(omit) }}"
      systemVmType: "{{ csv_row.system_vm_type | default(omit) }}"
      systemVmFlavor: "{{ csv_row.system_vm_flavor | default(omit) }}"
      systemVdns: "{{ csv_row.system_vdns | default(omit) }}"
      systemAz: "{{ csv_row.system_az | default(omit) }}"
      hdbDataMin: "{{ csv_row.hdb_data_min | default(omit) }}"
      hdbDataMax: "{{ csv_row.hdb_data_max | default(omit) }}"
      hdbLogMin: "{{ csv_row.hdb_log_min | default(omit) }}"
      hdbLogMax: "{{ csv_row.hdb_log_max | default(omit) }}"
      hdbSharedMin: "{{ csv_row.hdb_shared_min | default(omit) }}"
      hdbSharedMax: "{{ csv_row.hdb_shared_max | default(omit) }}"
      instanceNo: "{{ csv_row.Instance_no | default(omit) }}"
      alpacaExtPoolOld:
        "{{ (csv_row.alpaca_ext_pool_old | length > 0) |
          ternary(
            csv_row.alpaca_ext_pool_old,
            'ag10_bkp101' if csv_row.system_sla in ['SLA1', 'SLA2'] else
            'ag10_bkp102' if csv_row.system_sla in ['SLA3', 'SLA4'] else
            omit
          )
        }}"
      alpacaExtPoolNew:
        "{{ (csv_row.alpaca_ext_pool_new | length > 0) |
          ternary(
            csv_row.alpaca_ext_pool_new,
            'ag10_bkp101' if csv_row.system_sla in ['SLA1', 'SLA2'] else
            'ag10_bkp102' if csv_row.system_sla in ['SLA3', 'SLA4'] else
            omit
          )
        }}"
      backupShare: "{{ csv_row.backupshare | default(omit) }}"
      magicNumber: "{{ csv_row.magic_number | default(omit) }}"

- name: "Debug: Show csv"
  debug:
    var: csv
    verbosity: 1

- name: "Debug: Exit here for testing and debugging reasons"
  meta: end_play
  when: true

- name: "Replace each CSV variable name in system_variables with actual value"
  set_fact:
    _system_variables: "{{ _system_variables | to_json | replace('{ ' + item.key + ' }', item.value) | from_json }}"
  loop: "{{ csv | default({}) | dict2items }}"

- name: "Debug: Show _system_variables"
  debug:
    var: _system_variables
    verbosity: 1

# - name: "Debug: Exit here for testing and debugging reasons"
#   meta: end_play
#   when: true

- name: "Set system variables for system {{ csv.systemName }}"
  set_fact:
    system:
      variables: "{{ _system_variables[csv.systemName] | default([]) }}"

- name: "Generate commands for current csv row"
  include_tasks: process_system.yml
  when: system.variables is defined and system.variables is not none and system.variables | length > 0

- name: "Set SLA and default command sets for current CSV row"
  set_fact:
    sla_command_set: "{{ merged_definitions.service_levels[csv.systemSla].commands | default([]) }}"
    default_command_set: "{{ merged_definitions.commands | default([]) }}"

- name: "Debug: Show sla_command_set"
  debug:
    var: sla_command_set | default([])
    verbosity: 1

- name: "Debug: Show default_command_set"
  debug:
    var: default_command_set | default([])
    verbosity: 1

- name: "[merge:sla-commands->default-commands] Merge SLA specific commands into default command set"
  set_fact:
    merged_command_set: "{{ (default_command_set | default([])) + (sla_command_set | default([])) }}"

- name: "Debug: Show merged_command_set"
  debug:
    var: merged_command_set
    verbosity: 1

- name: "Debug: Show command count for current csv row / SLA"
  debug:
    msg: "{{ csv.systemSla }} gets {{ merged_command_set | length }} commands"

- name: "Generate commands for current csv row"
  include_tasks: process_command.yml
  loop: "{{ merged_command_set }}"
  loop_control:
    loop_var: command_definition
    index_var: command_index
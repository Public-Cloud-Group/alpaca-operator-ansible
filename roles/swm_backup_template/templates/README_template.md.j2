# ALPACA Operator Command Generation

This directory contains generated ALPACA Operator commands and configuration files based on CSV data processing.

## Generation Information

- **Generated at**: {{ generation_timestamp }}
- **Total systems processed**: {{ csv_data | length }}
- **CSV source**: {{ csv_processor.input_file | default('Unknown') }}

## SLA Distribution

| SLA Level | Name | Count | Systems |
|-----------|------|-------|---------|
| SLA1 | {{ sla_definitions.SLA1.name }} | {{ csv_data | selectattr('system_sla', 'equalto', 'SLA1') | list | length }} | {% for row in csv_data | selectattr('system_sla', 'equalto', 'SLA1') %}{{ row.system_name }}{% if not loop.last %}, {% endif %}{% endfor %} |
| SLA2 | {{ sla_definitions.SLA2.name }} | {{ csv_data | selectattr('system_sla', 'equalto', 'SLA2') | list | length }} | {% for row in csv_data | selectattr('system_sla', 'equalto', 'SLA2') %}{{ row.system_name }}{% if not loop.last %}, {% endif %}{% endfor %} |
| SLA3 | {{ sla_definitions.SLA3.name }} | {{ csv_data | selectattr('system_sla', 'equalto', 'SLA3') | list | length }} | {% for row in csv_data | selectattr('system_sla', 'equalto', 'SLA3') %}{{ row.system_name }}{% if not loop.last %}, {% endif %}{% endfor %} |
| SLA4 | {{ sla_definitions.SLA4.name }} | {{ csv_data | selectattr('system_sla', 'equalto', 'SLA4') | list | length }} | {% for row in csv_data | selectattr('system_sla', 'equalto', 'SLA4') %}{{ row.system_name }}{% if not loop.last %}, {% endif %}{% endfor %} |

## Generated Files

### Individual Command Files
{% for row in csv_data %}
- `command_{{ row.system_name | replace(' ', '_') | lower }}.yml` - {{ row.system_name }} ({{ row.system_sla }})
{% endfor %}

### Consolidated Files
- `consolidated_commands.yml` - All commands in a single playbook
- `inventory.ini` - Ansible inventory with SLA-based groups
- `variables.yml` - System-specific variables
- `README.md` - This documentation file

## SLA Definitions

### SLA1 - {{ sla_definitions.SLA1.name }}
- **Description**: {{ sla_definitions.SLA1.description }}
- **Process ID**: {{ sla_definitions.SLA1.command_defaults.processId }}
- **Schedule**: {{ sla_definitions.SLA1.command_defaults.schedule.period }}
- **Retention**: {{ sla_definitions.SLA1.command_defaults.history.retention }} seconds
- **Critical**: {{ sla_definitions.SLA1.command_defaults.critical | lower }}

### SLA2 - {{ sla_definitions.SLA2.name }}
- **Description**: {{ sla_definitions.SLA2.description }}
- **Process ID**: {{ sla_definitions.SLA2.command_defaults.processId }}
- **Schedule**: {{ sla_definitions.SLA2.command_defaults.schedule.period }}
- **Retention**: {{ sla_definitions.SLA2.command_defaults.history.retention }} seconds
- **Critical**: {{ sla_definitions.SLA2.command_defaults.critical | lower }}

### SLA3 - {{ sla_definitions.SLA3.name }}
- **Description**: {{ sla_definitions.SLA3.description }}
- **Process ID**: {{ sla_definitions.SLA3.command_defaults.processId }}
- **Schedule**: {{ sla_definitions.SLA3.command_defaults.schedule.period }}
- **Retention**: {{ sla_definitions.SLA3.command_defaults.history.retention }} seconds
- **Critical**: {{ sla_definitions.SLA3.command_defaults.critical | lower }}

### SLA4 - {{ sla_definitions.SLA4.name }}
- **Description**: {{ sla_definitions.SLA4.description }}
- **Process ID**: {{ sla_definitions.SLA4.command_defaults.processId }}
- **Schedule**: {{ sla_definitions.SLA4.command_defaults.schedule.period }}
- **Retention**: {{ sla_definitions.SLA4.command_defaults.history.retention }} seconds
- **Critical**: {{ sla_definitions.SLA4.command_defaults.critical | lower }}

## System Details

{% for row in csv_data %}
### {{ row.system_name }}
- **SLA**: {{ row.system_sla }} ({{ sla_definitions[row.system_sla].name }})
- **System Type**: {{ row.system_type }}
- **HDB SID**: {{ row.hdb_nw_sid }}
- **Availability Zone**: {{ row.system_az }}
- **Agent**: {{ row.agent_name }}
- **Tenant**: {{ row.hdb_tenant }}
- **VM Type**: {{ row.system_vm_type }}
- **VM Flavor**: {{ row.system_vm_flavor }}

{% endfor %}

## Usage

### Execute Individual Commands
```bash
# Execute a specific system command
ansible-playbook -i inventory.ini command_system_name.yml

# Example
ansible-playbook -i inventory.ini command_prd01.yml
```

### Execute All Commands
```bash
# Execute all commands at once
ansible-playbook -i inventory.ini consolidated_commands.yml
```

### Execute by SLA Group
```bash
# Execute only SLA1 (Production) systems
ansible-playbook -i inventory.ini consolidated_commands.yml --limit sla1_production

# Execute only SLA2 (Staging) systems
ansible-playbook -i inventory.ini consolidated_commands.yml --limit sla2_staging
```

## ALPACA API Configuration

The generated files include the following ALPACA API configuration:
- **Protocol**: {{ alpaca_api.protocol }}
- **Host**: {{ alpaca_api.host }}
- **Port**: {{ alpaca_api.port }}
- **Username**: {{ alpaca_api.username }}
- **TLS Verify**: {{ alpaca_api.tls_verify | lower }}

## Notes

- All commands are generated with `state: present` to ensure idempotency
- Individual command files can be executed independently
- The consolidated file provides a single execution point for all commands
- SLA-based inventory groups allow selective execution by SLA level
- Variables file contains all system-specific data for reference 
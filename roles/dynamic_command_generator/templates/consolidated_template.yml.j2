---
# Consolidated ALPACA Command Playbook
# Generated from CSV data - Total Commands: {{ expanded_command_data | length }}
# Generated on: {{ ansible_date_time.iso8601 }}

- name: Create ALPACA Commands from CSV Data
  hosts: {{ alpaca_api.host }}
  gather_facts: false

  vars:
    # ALPACA API Configuration
    ALPACA_Operator_API_Protocol: "{{ alpaca_api.protocol }}"
    ALPACA_Operator_API_Port: {{ alpaca_api.port }}
    ALPACA_Operator_API_Username: "{{ alpaca_api.username }}"
    ALPACA_Operator_API_Password: "{{ alpaca_api.password }}"
    ALPACA_Operator_API_Validate_Certs: {{ alpaca_api.tls_verify | lower }}

  tasks:
{% for command_data in expanded_command_data %}
    - name: Create {{ command_data.command_name }} for {{ command_data.system_name }}
      pcg.alpaca_operator.alpaca_command:
        system:
          systemName: "{{ command_data.system_name }}"
        command:
          name: "{{ command_data.command_name }}"
          state: present
          agentName: "{{ command_data.agent_name }}"
          processId: {{ command_data.processId }}
          parameters: "{{ command_data.parameters | replace('__SYSTEM_TYPE__', command_data.system_type) | replace('__HDB_NW_SID__', command_data.hdb_nw_sid) | replace('__SYSTEM_AZ__', command_data.system_az) }}"
          parametersNeeded: {{ command_data.parametersNeeded | lower }}
          disabled: {{ command_data.disabled | lower }}
          critical: {{ command_data.critical | lower }}
          autoDeploy: {{ command_data.autoDeploy | lower }}
          schedule:
            period: "{{ command_data.schedule.period }}"
            time: "{{ command_data.schedule.time }}"
            cronExpression: "{{ command_data.schedule.cronExpression }}"
            daysOfWeek: {{ command_data.schedule.daysOfWeek | to_json }}
          history:
            documentAllRuns: {{ command_data.history.documentAllRuns | lower }}
            retention: {{ command_data.history.retention }}
          timeout:
            type: "{{ command_data.timeout.type }}"
            value: {{ command_data.timeout.value }}
          escalation:
            mailEnabled: {{ command_data.escalation.mailEnabled | lower }}
            smsEnabled: {{ command_data.escalation.smsEnabled | lower }}
            mailAddress: "{{ command_data.escalation.mailAddress }}"
            smsAddress: "{{ command_data.escalation.smsAddress }}"
            minFailureCount: {{ command_data.escalation.minFailureCount }}
            triggers:
              everyChange: {{ command_data.escalation.triggers.everyChange | lower }}
              toRed: {{ command_data.escalation.triggers.toRed | lower }}
              toYellow: {{ command_data.escalation.triggers.toYellow | lower }}
              toGreen: {{ command_data.escalation.triggers.toGreen | lower }}
        apiConnection:
          host: "{{ alpaca_api.host }}"
          protocol: "{{ alpaca_api.protocol }}"
          port: {{ alpaca_api.port }}
          username: "{{ alpaca_api.username }}"
          password: "{{ alpaca_api.password }}"
          tls_verify: {{ alpaca_api.tls_verify | lower }}
      register: command_result_{{ loop.index }}

    - name: Display result for {{ command_data.command_name }} - {{ command_data.system_name }}
      ansible.builtin.debug:
        msg: |
          Command Creation Result:
          - Command: {{ command_data.command_name }}
          - System: {{ command_data.system_name }}
          - Agent: {{ command_data.agent_name }}
          - SLA: {{ command_data.system_sla }}
          - Status: {{ 'Created' if command_result_{{ loop.index }}.changed else 'Already exists' }}
{% endfor %}

    - name: Display consolidated execution summary
      ansible.builtin.debug:
        msg: |
          Consolidated Command Execution Summary:
          - Total commands processed: {{ expanded_command_data | length }}
          - Commands created: {{ expanded_command_data | length }}
          - Execution completed successfully 